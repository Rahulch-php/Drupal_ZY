<?php

/**
 * @file
 * Lnaguage specific customizations.
 */

  define('DEFAULT_OPTIONS', 'http://example.com|Example Site');

/**
 * function to return the access permissions for the sitemanager module tasks
 * @return array
 */
function language_selection_perm() {
  return array('access site-wide language form', 'access Language Selection settings');
}

/**
 * Implementation of site_manager_init().
 */
function language_selection_init() {
  $path = drupal_get_path('module', 'language_selection');
  drupal_add_js($path . '/scripts/jquery.validate.min.js');
  drupal_add_js($path . '/scripts/language_selection.validate.js');
}

/**
 * hook_theme()
 * competition theme function*
 * @return array  site-manager-resource-form.tpl.php
 */
function language_selection_theme() {
  return array(
    'language_selection_form' => array(
    'arguments' => array('form' => NULL),
    'template' => 'language-selection-form'
    ),
  );
}
/**
 * Implementation of language_selection_menu().
 */
function language_selection_menu() {
  $items['language'] = array(
    'title' => t('language form'),
    'description' => 'Create a system language form and set up categories for the form to use.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('language_selection_form'),
    'access arguments' => array('access site-wide language form'),
  );
  $items['admin/settings/language_selection'] = array(
    'title' => t('Site Wide Language Selection'),
    'description' => t('Define languages with appropriate URL.'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('language_selection_admin_form'),
    'access arguments' => array('access Language Selection settings'),
    'file' => 'language_selection.admin.inc'
  );

  return $items;
}

/**
 * implementation of language form
 * @return form
 */
function language_selection_form() { 
  $form = array();
  $path = drupal_get_path('module', 'language_selection');
  //$form['#attributes']['name'] = 'site-manager-language-form';
  
  $options = variable_get('allowed_languages', '');
  if (empty($options)) {
    $options = DEFAULT_OPTIONS;
  } 
    $list = explode("\n", $options); 
    $list = array_map('trim', $list);
    $list = array_filter($list, 'strlen');
    foreach ($list as $opt) {

    if (strpos($opt, '|') !== FALSE) {
      list($key, $value) = explode('|', $opt);
        $option[$key] = $value;
      }
    }

    $form['languages'] = array(
        '#type' => 'radios',
        '#options' => $option,
    );

    $form['#validate'][] = 'language_selection_form_validate';

    $form['submit'] = array(
        '#type' => 'image_button',
        '#src' => $path . '/images/btn_submit.gif',
    );
    return $form;
}

/**
 * Validateing language form.
 * @return array
 */
function language_selection_form_validate($form, &$form_state) {
    if ($form_state['values']['languages']== '') {
        form_set_error('languages', t("Please choose a language"));
    }
}
/**
 * implementation of language form submit functionality
 * @return array
 */
function language_selection_form_submit($form, &$form_state) {
    global $language;
    $values = $form_state['values']; 

    drupal_goto($values['languages']);
}
